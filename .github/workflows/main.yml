name: Pull Request Target PoC

on:
  pull_request_target:
    types: [opened, synchronize]

  pull_request:
    types: [opened, synchronize]

env:
  SOURCE_IS_FORK: ${{ github.event.pull_request.head.repo.fork }}
  RUN_ON_MAIN: ${{ github.event_name == 'pull_request_target' }}

jobs:
  create_branch:
    if: ${{ github.event.pull_request.head.repo.fork && github.event_name == 'pull_request_target' }}
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Check out base repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}
          ref: main

      - name: Fetch source branch from fork
        run: |
          FORK_REPO=${{ github.event.pull_request.head.repo.clone_url }}
          FORK_BRANCH=${{ github.event.pull_request.head.ref }}
          echo "Fetching the source branch from the fork..."
          git remote add fork "$FORK_REPO"
          git fetch fork "$FORK_BRANCH"

      - name: Inspect the fork branch
        id: inspect_branch
        run: |
          FORK_BRANCH=${{ github.event.pull_request.head.ref }}
          echo "Checking content of fork branch: $FORK_BRANCH"
          git checkout "fork/$FORK_BRANCH"

          SOME_CONDITION=true
          if [ $SOME_CONDITION ]; then
            echo "conditions_met=true" >> $GITHUB_OUTPUT
          else
            echo "conditions_met=false" >> $GITHUB_OUTPUT
          fi

      - name: Print GITHUB_TOKEN permissions
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Checking permissions of GITHUB_TOKEN..."
          curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
               -H "Accept: application/vnd.github+json" \
               https://api.github.com/repos/${{ github.repository }}/actions/permissions \
               | jq

      - name: Create a local branch to back-up the source branch
        if: steps.inspect_branch.outputs.conditions_met == 'true'
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          FORK_OWNER=${{ github.event.pull_request.head.repo.owner.login }}
          FORK_BRANCH=${{ github.event.pull_request.head.ref }}
          NEW_BRANCH="pr${PR_NUMBER}_${FORK_OWNER}-${FORK_BRANCH}"

          echo "Creating new branch: $NEW_BRANCH"

          # Create a new branch
          git checkout -b "$NEW_BRANCH" "fork/$FORK_BRANCH"

          # Push the branch to the remote
          #### git remote set-url origin https://x-access-token:${{ secrets.PUSH_PAT_2 }}@github.com/${{ github.repository }}
          git push origin "$NEW_BRANCH"

  pr_target:
    if: ${{ github.event_name == 'pull_request_target' }}
    runs-on: ubuntu-latest
    steps:
      - name: Echo details (PR TARGET)
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          FORK_OWNER=${{ github.event.pull_request.head.repo.owner.login }}
          FORK_BRANCH=${{ github.event.pull_request.head.ref }}
          echo "PR_NUMBER => ${PR_NUMBER}"
          echo "FORK_OWNER => ${FORK_OWNER}"
          echo "FORK_BRANCH => ${FORK_BRANCH}"
          NEW_BRANCH="pr${PR_NUMBER}_${FORK_OWNER}-${FORK_BRANCH}"
          echo "NEW_BRANCH => ${NEW_BRANCH}"
          echo ""
          echo "Further PR information..."
          echo "HEAD.REF => ${{ github.event.pull_request.head.ref }}"
          echo "COMMIT-SHA => ${{ github.event.pull_request.head.sha }}"
          echo "REF => ${{ github.ref }}"
          echo "BASE_REF => ${{ github.base_ref }}"
    
      - name: Print GITHUB_TOKEN permissions
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Checking permissions of GITHUB_TOKEN..."
          curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
               -H "Accept: application/vnd.github+json" \
               https://api.github.com/repos/${{ github.repository }}/actions/permissions \
               | jq
